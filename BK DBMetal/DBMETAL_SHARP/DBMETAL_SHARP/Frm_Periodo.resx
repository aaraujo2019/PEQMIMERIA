<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCerrarPe.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>